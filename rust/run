#!/bin/bash

main() {
    generate_conf
    compile
    #delete_log
    exec_stp $1
}

delete_log() {
  rm -rf ./log/
}

generate_conf() {
    if [ $LOCAL -eq 1 ]; then
        ./generate_conf_local || exit 1
    else
        ./generate_conf_cop || exit 1
    fi

    if [ ! -f ca-root/crt ]; then
      echo "Missing ca certificates, generating them".
      ./ca || exit 1
    fi

    if [ ! -f config/clients.config ]; then
        echo Error: Missing config/clients.config! >&2
        exit 1
    fi

    if [ ! -f config/replicas.config ]; then
        echo Error: Missing config/replicas.config! >&2
        exit 1
    fi

    if [ ! -f config/batch.config ]; then
        echo Error: Missing config/batch.config! >&2
        exit 1
    fi
}

compile() {
    [ $COMPILE -eq 1 ] && ./compile
}

exec_stp() {
     if [ -n "$MEM_LIMIT" ]; then
    echo "[*] Running with memory limit: $MEM_LIMIT"

    CGROUP_DIR="/sys/fs/cgroup/atlas_test"

    # Create cgroup if it doesn't exist
    if [ ! -d "$CGROUP_DIR" ]; then
        sudo mkdir -p "$CGROUP_DIR"
        sudo chown -R $USER:$USER "$CGROUP_DIR"
    fi

    # Apply memory limit
    echo "$MEM_LIMIT" > "$CGROUP_DIR/memory.max"

    # Add this shell process to the cgroup
    echo $$ > "$CGROUP_DIR/cgroup.procs"

    # Exec program (inherits cgroup membership)
    exec ./target/release/atlas-ycsb "$1"
  else
    echo "[*] Running without memory limit"
    exec ./target/release/atlas-ycsb "$1"
  fi
}

main $1